name: SmallRye Release

on:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    name: release

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 8

      - name: maven release ${{github.event.release.tag_name}}
        run: |
          git config --global user.name "SmallRye CI"
          git config --global user.email "smallrye@googlegroups.com"
          git fetch --all
          git switch -c release
          git tag -d ${{github.event.release.tag_name}}
          git push --delete origin ${{github.event.release.tag_name}}
          mvn -B release:prepare -DreleaseVersion=${{github.event.release.tag_name}}
          git push origin ${{github.event.release.tag_name}}
          git checkout -b master origin/master
          git rebase release
          git push

      - uses: actions/github-script@0.5.0
        name: update release notes
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.listMilestonesForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo
            }).then(({data}) => {

                let milestone = data.find(function (milestone) {
                    return milestone.title === "${{github.event.release.tag_name}}"
                });

                const options = github.issues.listForRepo.endpoint.merge({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    milestone: milestone.number
                });

                github.paginate(options).then(issues => {
                    let notes = "";
                    for (const issue of issues) {
                        notes = notes + "- #" + issue.number + " " + issue.title + "\n";
                    }

                    github.repos.listReleases({
                        owner: context.repo.owner,
                        repo: context.repo.repo
                    }).then(({data}) => {

                        let release = data.find(function (release) {
                            return release.tag_name === "${{github.event.release.tag_name}}"
                        });

                        github.repos.updateRelease({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            release_id: release.id,
                            tag_name: "${{github.event.release.tag_name}}",
                            draft: false,
                            body: notes
                        });
                    });

                });

            });
