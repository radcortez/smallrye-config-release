name: SmallRye Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    name: release

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 8

      - name: release ${{github.event.release.tag_name}}
        run: |
          git config --global user.name "SmallRye CI"
          git config --global user.email "smallrye@googlegroups.com"
          git fetch --all
          git switch -c release
          git tag -d ${{github.event.release.tag_name}}
          git push --delete origin ${{github.event.release.tag_name}}
          mvn -B release:prepare -DreleaseVersion=${{github.event.release.tag_name}}
          git push origin ${{github.event.release.tag_name}}
          git checkout -b master origin/master
          git rebase release
          git push

      - uses: actions/github-script@0.5.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const options = github.issues.listForRepo.endpoint.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                milestone: "${{github.event.release.tag_name}}"
            });
            github.paginate(options).then(issues => {
                let notes = "";
                for (const issue of issues) {
                    notes = notes + "- #" + issue.number + " " + issue.title + "\n";
                }

                github.repos.getReleaseByTag({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    tag: "${{github.event.release.tag_name}}"
                }).then(({ data }) => {

                    github.repos.updateRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        release_id: data.id,
                        body: notes
                    });

                });

            });
